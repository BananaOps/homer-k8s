name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get tag name
        id: tag
        uses: haya14busa/action-cond@v1
        with:
          cond: "${{ startsWith(github.ref, 'refs/tags/') }}"
          if_true: ${{ github.ref }}
          if_false: ${{ steps.bumpr.outputs.next_version }}

      - id: version_tag
        run: |
          echo "::set-output name=tag::$(echo ${{steps.tag.outputs.value}} | cut -d'v' -f2 )"
          echo "::set-output name=tag_chart::$(echo ${{steps.tag.outputs.value}} | cut -d'v' -f2 )"


      #Update version in Chart.yaml
      - if: steps.tag.outputs.value != ''
        run: |
          sed -i '/^version:/c\version: ${{steps.version_tag.outputs.tag_chart}}' ./helm/homer-k8s/Chart.yaml
          sed -i '/^appVersion:/c\appVersion: "${{steps.version_tag.outputs.tag_chart}}"' ./helm/homer-k8s/Chart.yaml

      - if: steps.tag.outputs.value != ''
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: bump charts to ${{steps.version_tag.outputs.tag}}"
          branch: main
  
      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_AUTH_TOKEN }}

      - uses: imjasonh/setup-ko@v0.9

      - name: Build and Push on Docker Hub  
        env:
          KO_DOCKER_REPO: bananaops/homer-k8s
        run: ko publish ./cmd --bare --tags latest,${{steps.version_tag.outputs.tag}}

  release-helm: 
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ${{ github.ref }} ( ${{ github.sha }} )"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'main'
  
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1
        with:
          charts_dir: helm
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
